<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Vazha Bot Status</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        :root {
            --primary-color: #13bb56;
            --background-color: #36393f;
            --sidebar-color: #2f3136;
            --text-color: #ffffff;
            --text-muted: #8e9297;
            --card-background: #40444b;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: Arial, sans-serif;
            background-color: var(--background-color);
            color: var(--text-color);
            display: flex;
            height: 100vh;
        }
        
        .sidebar {
            width: 250px;
            background-color: var(--sidebar-color);
            padding: 20px;
            display: flex;
            flex-direction: column;
        }
        
        .user-info {
            display: flex;
            align-items: center;
            margin-bottom: 30px;
        }
        
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }
        
        .user-details h2 {
            font-size: 16px;
        }
        
        .user-details p {
            font-size: 14px;
            color: var(--text-muted);
        }
        
        .nav-item {
            display: flex;
            align-items: center;
            padding: 10px;
            color: var(--text-color);
            text-decoration: none;
            margin-bottom: 10px;
            border-radius: 5px;
            transition: background-color 0.2s;
        }
        
        .nav-item:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }
        
        .nav-item svg {
            margin-right: 10px;
        }
        
        .main-content {
            flex: 1;
            padding: 30px;
            overflow-y: auto;
        }
        
        h1 {
            font-size: 24px;
            margin-bottom: 20px;
        }
        
        .bot-logo {
            width: 150px;
            height: 150px;
            border-radius: 50%;
            object-fit: cover;
            border: 4px solid var(--primary-color);
            box-shadow: 0 0 20px rgba(19, 187, 86, 0.5);
            margin-bottom: 20px;
        }
        
        .status-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .status-item {
            background-color: var(--card-background);
            border-radius: 8px;
            padding: 20px;
            text-align: center;
        }
        
        .status-item h3 {
            font-size: 16px;
            margin-bottom: 10px;
            color: var(--text-muted);
        }
        
        .status-item p {
            font-size: 24px;
            font-weight: bold;
        }
        
        .chart-container {
            background-color: var(--card-background);
            border-radius: 8px;
            padding: 20px;
            margin-bottom: 30px;
        }
        
        .chart-title {
            font-size: 18px;
            margin-bottom: 15px;
            color: var(--text-color);
        }
        
        .button {
            display: inline-block;
            background-color: var(--primary-color);
            color: var(--text-color);
            padding: 10px 20px;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
            transition: background-color 0.3s;
        }
        
        .button:hover {
            background-color: #0fa348;
        }
        
        .alert {
            position: fixed;
            top: 20px;
            right: 20px;
            background-color: var(--primary-color);
            color: var(--text-color);
            padding: 10px 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
            opacity: 0;
            transition: opacity 0.3s;
        }
        
        .alert.show {
            opacity: 1;
        }
        
        @media (max-width: 768px) {
            body {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
                flex-direction: row;
                justify-content: space-around;
                padding: 10px 0;
                overflow-x: auto;
            }
            
            .main-content {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <aside class="sidebar">
        <div class="user-info">
            <img src="https://i.imgur.com/FYYcF5j.png" alt="User Avatar" class="user-avatar">
            <div class="user-details">
                <h2>ADMIN v2 </h2>
                <p>admin status </p>
            </div>
        </div>
        <nav>
            <a href="/" class="nav-item">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m3 9 9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"/><polyline points="9 22 9 12 15 12 15 22"/></svg>
                Home
            </a>
            <a href="/admin" class="nav-item">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect width="20" height="16" x="2" y="4" rx="2"/><path d="M10 8v8"/><path d="M14 8v8"/><path d="M2 12h20"/></svg>
                Admin Dashboard
            </a>
            <a href="/admin/botstatus" class="nav-item">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M12.22 2h-.44a2 2 0 0 0-2 2v.18a2 2 0 0 1-1 1.73l-.43.25a2 2 0 0 1-2 0l-.15-.08a2 2 0 0 0-2.73.73l-.22.38a2 2 0 0 0 .73 2.73l.15.1a2 2 0 0 1 1 1.72v.51a2 2 0 0 1-1 1.74l-.15.09a2 2 0 0 0-.73 2.73l.22.38a2 2 0 0 0 2.73.73l.15-.08a2 2 0 0 1 2 0l.43.25a2 2 0 0 1 1 1.73V20a2 2 0 0 0 2 2h.44a2 2 0 0 0 2-2v-.18a2 2 0 0 1 1-1.73l.43-.25a2 2 0 0 1 2 0l.15.08a2 2 0 0 0 2.73-.73l.22-.39a2 2 0 0 0-.73-2.73l-.15-.08a2 2 0 0 1-1-1.74v-.5a2 2 0 0 1 1-1.74l.15-.09a2 2 0 0 0 .73-2.73l-.22-.38a2 2 0 0 0-2.73-.73l-.15.08a2 2 0 0 1-2 0l-.43-.25a2 2 0 0 1-1-1.73V4a2 2 0 0 0-2-2z"/><circle cx="12" cy="12" r="3"/></svg>
                Bot Status
            </a>
        </nav>
        <a href="/admin/logout" class="nav-item" style="margin-top: auto;">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"/><polyline points="16 17 21 12 16 7"/><line x1="21" x2="9" y1="12" y2="12"/></svg>
            Logout
        </a>
    </aside>

    <main class="main-content">
        <h1>Vazha Bot Status</h1>
        <img src="<%= botData.logo || 'https://i.imgur.com/FYYcF5j.png' %>" alt="Vazha Bot Logo" class="bot-logo">
        
        <section class="status-grid">
            <div class="status-item">
                <h3>Ping</h3>
                <p id="ping"><%= botData.ping || 'N/A' %> ms</p>
            </div>
            <div class="status-item">
                <h3>Total Servers</h3>
                <p id="totalServers"><%= botData.totalGuilds || 'N/A' %></p>
            </div>
            <div class="status-item">
                <h3>Total Users</h3>
                <p id="totalUsers"><%= botData.totalMembers || 'N/A' %></p>
            </div>
            <div class="status-item">
                <h3>Total Channels</h3>
                <p id="totalChannels"><%= botData.totalChannels || 'N/A' %></p>
            </div>
            <div class="status-item">
                <h3>Uptime</h3>
                <p id="uptime"><%= botData.uptime || 'N/A' %></p>
            </div>
        </section>

        <div class="chart-container">
            <div class="chart-title">Ping History</div>
            <canvas id="pingChart"></canvas>
        </div>

        <a href="/" class="button">Go Home</a>
    </main>

    <div id="customAlert" class="alert">
        <span id="alertMessage"></span>
    </div>

    <script>
        const pingHistory = <%- JSON.stringify(pingHistory) %>;
        const labels = pingHistory.map(entry => new Date(entry.timestamp).toLocaleTimeString());
        const data = pingHistory.map(entry => entry.ping);

        const ctx = document.getElementById('pingChart').getContext('2d');

        const pingChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: labels,
                datasets: [{
                    label: 'Ping (ms)',
                    data: data,
                    borderColor: '#13bb56',
                    borderWidth: 2,
                    pointRadius: 0,
                    fill: false
                }]
            },
            options: {
                scales: {
                    x: {
                        title: {
                            display: true,
                            text: 'Time'
                        },
                        grid: {
                            display: false
                        }
                    },
                    y: {
                        title: {
                            display: true,
                            text: 'Ping (ms)'
                        },
                        beginAtZero: true,
                        grid: {
                            color: 'rgba(255, 255, 255, 0.1)'
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                const time = context.label;
                                const ping = context.raw;
                                return `Time: ${time}, Ping: ${ping} ms`;
                            }
                        }
                    }
                },
                interaction: {
                    mode: 'nearest',
                    axis: 'x',
                    intersect: false
                }
            }
        });

        async function updatePing() {
            try {
                const response = await fetch('/api/ping');
                const data = await response.json();
                document.getElementById('ping').textContent = `${data.ping} ms`;
                addPingToChart(data.ping);
            } catch (error) {
                console.error('Error fetching ping:', error);
            }
        }

        function addPingToChart(ping) {
            const currentTime = new Date().toLocaleTimeString();
            pingChart.data.labels.push(currentTime);
            pingChart.data.datasets[0].data.push(ping);
            if (pingChart.data.labels.length > 20) {
                pingChart.data.labels.shift();
                pingChart.data.datasets[0].data.shift();
            }
            pingChart.update();
        }

        document.onkeydown = e => {
            if (e.key === "F12" || (e.ctrlKey && e.key === "u") || (e.ctrlKey && e.shiftKey && e.key === "I")) {
                showAlert("This action is not allowed");
                return false;
            }
        };

        document.addEventListener("contextmenu", e => {
            showAlert("Right click is disabled");
            e.preventDefault();
        });

        function showAlert(message) {
            const alert = document.getElementById("customAlert");
            const alertMessage = document.getElementById("alertMessage");
            alertMessage.textContent = message;
            alert.classList.add("show");
            setTimeout(() => {
                alert.classList.remove("show");
            }, 3000);
        }
        setInterval(updatePing, 5000);
    </script>
</body>
</html>